# Generated by Django 5.2.4 on 2025-07-16 03:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('surveyor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SurveyIns',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('customer_code', models.CharField(blank=True, null=True)),
                ('cont', models.CharField(blank=True, null=True)),
                ('cont_size', models.CharField(blank=True, null=True)),
                ('cont_type', models.CharField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, null=True)),
                ('washing', models.CharField(blank=True, null=True)),
                ('manufacture', models.CharField(blank=True, null=True)),
                ('tare', models.CharField(blank=True, null=True)),
                ('payload', models.CharField(blank=True, null=True)),
                ('grade_depot', models.CharField(blank=True, null=True)),
                ('haulier_in', models.CharField(blank=True, null=True)),
                ('truck_no_in', models.CharField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, null=True)),
                ('washing_upload_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, null=True)),
                ('photo_status', models.CharField(blank=True, null=True)),
                ('eir_status', models.CharField(blank=True, null=True)),
                ('eir_send_at', models.DateTimeField(blank=True, null=True)),
                ('eir_data', models.CharField(blank=True, null=True)),
                ('grade_msl', models.CharField(blank=True, null=True)),
                ('grade_msl_status', models.CharField(blank=True, null=True)),
                ('grade_change_req_by', models.CharField(blank=True, null=True)),
                ('grade_change_req_at', models.DateTimeField(blank=True, null=True)),
                ('review_by', models.CharField(blank=True, null=True)),
                ('review_at', models.DateTimeField(blank=True, null=True)),
                ('review_status', models.CharField(blank=True, null=True)),
                ('review_message', models.CharField(blank=True, null=True)),
                ('review_remark', models.CharField(blank=True, null=True)),
                ('third_party_damage', models.CharField(blank=True, null=True)),
                ('estimator_remark', models.CharField(blank=True, null=True)),
                ('estimated_by', models.CharField(blank=True, null=True)),
                ('estimated_at', models.DateTimeField(blank=True, null=True)),
                ('mnr_upload_by', models.CharField(blank=True, null=True)),
                ('mnr_upload_at', models.DateTimeField(blank=True, null=True)),
                ('stacking_status', models.CharField(blank=True, null=True)),
                ('stacking_by', models.CharField(blank=True, null=True)),
                ('stacking_at', models.DateTimeField(blank=True, null=True)),
                ('stacking_location', models.CharField(blank=True, null=True)),
                ('stacking_condition', models.CharField(blank=True, null=True)),
                ('shift_loc_by', models.CharField(blank=True, null=True)),
                ('shift_loc_at', models.CharField(blank=True, null=True)),
                ('shift_loc_curr', models.CharField(blank=True, null=True)),
                ('shift_loc_hist01', models.CharField(blank=True, null=True)),
                ('shift_loc_hist02', models.CharField(blank=True, null=True)),
                ('shift_loc_hist03', models.CharField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('act_in', models.CharField(blank=True, null=True)),
                ('washed_by', models.CharField(blank=True, null=True)),
                ('roof_survey_at', models.DateTimeField(blank=True, null=True)),
                ('roof_survey_by', models.CharField(blank=True, null=True)),
                ('roof_survey_status', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_ins',
            },
        ),
        migrations.CreateModel(
            name='SurveyInItems',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('upload_site', models.CharField(blank=True, null=True)),
                ('upload_seq', models.CharField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, null=True)),
                ('eir_photo_path', models.CharField(blank=True, null=True)),
                ('eir_photo_name', models.CharField(blank=True, null=True)),
                ('eir_rotation', models.CharField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('survey_in_id', models.ForeignKey(blank=True, db_column='survey_in_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='surveyor.surveyins')),
            ],
            options={
                'db_table': 'survey_in_items',
            },
        ),
        migrations.CreateModel(
            name='SurveyPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='survey_photos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='surveyor.surveyins')),
            ],
            options={
                'db_table': 'surveyphoto',
            },
        ),
    ]
